#lang planet neil/sicp

; ch 1.1
; * primitive arithmetic operations
; * combination of these operations
; * abstraction these composite operations
;   > via. defining them as compound procedures // see also : lexical scoping

; We must learn to visualize the processes generated by **various types of procedures**.
; > Only after we have developed such a skill can we learn to reliably construct programs that exhibit the desired behavior.

; [Procedure]
;   is a pattern for **local evolution** of a computational process.
;   * It specifies how each stage of the process is built upon the previous stage.
;       > see also ; Design by Contract [https://en.wikipedia.org/wiki/Design_by_contract]
;   * Making statements about the overall, or **global**, behavior of a process whose **local evolution** has been specified by a procedure.
;       > This is very difficult, but there are typical patterns of process evolution.



